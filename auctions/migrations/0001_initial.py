# Generated by Django 4.1.7 on 2023-02-28 21:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name', max_length=200)),
                ('icon', models.CharField(help_text='An icon representing the category from the list of available Bootstrap icons', max_length=50)),
                ('description', models.TextField(help_text='Description of the category')),
                ('hex_color_code', models.CharField(help_text='The 6 digit hex color code for the category background (https://htmlcolorcodes.com/)', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='What would you like to offer to sell? (50 characters maximum)', max_length=53)),
                ('description', models.TextField(help_text='How would you descibe your item? (500 characters maximum)', max_length=540)),
                ('image', models.ImageField(blank=True, help_text='Do you have a photo of your item?', upload_to='images/')),
                ('price', models.PositiveIntegerField(help_text='What would you like to start the item price at (Whole dollars only, maximum of 100000)', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(1)])),
                ('active', models.BooleanField(default=True, help_text='Is this item still eavailable?')),
                ('completed', models.BooleanField(default=False, help_text='Was this item sold?')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When was this item listing created?')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When was this item listing last updated?')),
                ('category', models.ForeignKey(help_text='Which category best describes your item?', on_delete=django.db.models.deletion.PROTECT, related_name='listings', to='auctions.category')),
                ('user', models.ForeignKey(help_text='Who are you?', on_delete=django.db.models.deletion.CASCADE, related_name='listings', to=settings.AUTH_USER_MODEL)),
                ('watchers', models.ManyToManyField(help_text='Relationship between users and listings', related_name='watching', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Comment text')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Comment creation time')),
                ('listing', models.ForeignKey(help_text='Related listing', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='auctions.listing')),
                ('user', models.ForeignKey(help_text='Related user', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(help_text='Bid price', validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Bid creation time')),
                ('listing', models.ForeignKey(help_text='Related listing', on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='auctions.listing')),
                ('user', models.ForeignKey(help_text='Related user', on_delete=django.db.models.deletion.CASCADE, related_name='bids', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
